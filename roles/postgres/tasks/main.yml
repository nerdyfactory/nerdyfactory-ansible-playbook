---
- name: Ensure bash, OpenSSl, and libssl are the latest versions
  apt:
    name: ["bash", "openssl", "libssl-dev", "libssl-doc"]
    update_cache: true
    state: latest
  tags: packages
  become: yes

- name: Create file repository config for postgres
  shell: echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list
  become: yes

- name: Import the repository signing key (postgres)
  shell: wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
  become: yes

- name: Install PostgreSQL
  apt:
    name:
      [
        "postgresql",
        "postgresql-contrib",
        "libpq-dev",
        "python-psycopg2",
        "python3-pip",
      ]
    update_cache: true
    state: latest
  become: yes

- name: Make sure psycopg2 is installed
  pip:
    name: psycopg2
    state: present
  become: yes

- name: Reload local packages
  shell: apt update
  become: yes

- name: Ensure the PostgreSQL service is running
  service:
    name: postgresql
    state: started
    enabled: yes
  become: yes

- name: Ensure database is created
  become_user: postgres
  postgresql_db:
    name: "{{ db_name }}"
    encoding: UTF-8
    lc_collate: en_US.UTF-8
    lc_ctype: en_US.UTF-8
    template: template0
    state: present
  become: yes

- name: Ensure user has access to the database
  become_user: postgres
  postgresql_user:
    db: "{{ db_name }}"
    name: "{{ db_user }}"
    password: "{{ db_pass }}"
    priv: ALL
    state: present
  become: yes

- name: Ensure user does not have unnecessary privileges
  become_user: postgres
  postgresql_user:
    name: "{{ db_user }}"
    role_attr_flags: NOSUPERUSER,NOCREATEDB
    state: present
  become: yes
  notify: Restart Postgres
